#!/bin/bash

all_name='[ALL]'
back_name='[BACK]'
mode=library
artistTag="artist"
clear=False


filters="("
declare -A argarray

d_playlist() {
    local format="%position% - %title% - %album% - %artist%"
    local title

    title=$(mpc playlist -f "$format" | dmenu -p Track "${dmenu_args[@]}")
    printf '%s' "${title%% *}"


}

d_show_tag() {
    local tag="$1"
    local filter="${filters})"
    local search
    local title="${tag^}"

    if [[ "$filter" == "()" ]]; then
        filter=""
    fi

    mapfile -t search < <(mpc list $tag "$filter")

    if [[ "$title" == "Albumartist" ]]; then
        title="AlbumArtist" #Just a special case
    fi

    if (( ${#search[@]} > 1 )) ; then

        {
            printf '%s\n' "$all_name"
            printf '%s\n' "$back_name"
            printf '%s\n' "${search[@]}" | sort -f
        } | dmenu -p $title "${dmenu_args[@]}"
    else
        printf '%s\n' "${search[0]}"
    fi
}


d_add_restriction() {
    local tag="$1"
    local arg="$2"

    if [[ "$arg" != "$all_name" ]]; then
        if [[ "$filters" != "(" ]]; then
            filters="$filters AND "
        fi

        filters="$filters ($tag == \"$arg\")"
    fi


}

d_remove_restriction() {
    local args="$filters"
    local argsLength="${#args}"
    local foundArgs=0
    local argCount="$1"
    local filter=""
    local i=0
    while [[ i -lt argsLength && foundArgs -lt argCount ]]
    do
        local word="${args[$i]}"
        local wordLength="${#word}"
        local j=0
        while [[ j -lt wordLength && foundArgs -lt argCount ]]
        do
            local char="${word:j:1}"
            if [[ "$char" = ")" ]]; then
                let "foundArgs++"
            fi
            filter="$filter$char"
            let "j++"
        done
        if [[ foundArgs -lt argCount ]]; then
            filter="$filter "
        fi
        let "i++"
    done
    if [[ "$filter" = "" ]]; then
        filter="("
    fi
    filters="$filter"
}

i=0

for arg do
    if [[ $arg == :: ]]; then
        dmenu_args=( "${@:$i}" )
        break
    fi

    case "$arg" in
        # Mode args
        -l) mode=library ;;
        -p) mode=playlist ;;
        -c) clear=True ;;
        # Sorting args
    	-t) argarray["$i"]="title" ;;
    	-a) argarray["$i"]="artist" ;; 
        -A) argarray["$i"]="albumartist" ;;
        -al) argarray["$i"]="album" ;;
        -g) argarray["$i"]="genre" ;;
    esac

    let "i++"
done

case "$mode" in
    library)

    i=0
    max=$(( ${#argarray[@]} ))
    argCount=0

    while [[ i -lt max ]]
    do
        tag="${argarray[$i]}"
        arg=$(d_show_tag "$tag")
        [[ $arg ]] || exit 1
        if [[ "$arg" != "$back_name" ]]; then
            if [[ "$arg" != "$all_name" ]]; then
                d_add_restriction "$tag" "$arg"
                let "argCount++"
            fi
            let "i++"
        else
            let "i--"
            let "argCount--"
            if [[ i -lt 0 ]]; then
                exit 1
            fi
            d_remove_restriction "$argCount"
        fi
    done

    if [[ $clear == True ]]; then
        mpc clear
    fi

    filters="${filters})"

    if [[ "$filters" != "()" ]]; then
        mpc findadd "$filters"
    else
        mpc add /
    fi


        mpc play >/dev/null 2>&1

    ;;


    playlist)
        mpc play "$(d_playlist)"
    ;;
esac
