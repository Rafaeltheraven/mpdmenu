#!/bin/bash

all_name='[ALL]'
back_name='[BACK]'
prev_name='[PREV]'
next_name='[NEXT]'
pause_name='[PAUSE]'
play_name='[PLAY]'
stop_name='[STOP]'
clear_name='[CLEAR]'
toggle_name='[PLAY/PAUSE]'
nextal_name='[NEXT ALBUM]'
preval_name='[PREV ALBUM]'
rand_track='[RANDOM TRACK]'
rand_album='[RANDOM ALBUM]'
queue_track='[QUEUE TRACKS]'
queue_album='[QUEUE ALBUMS]'

mode=library
clear=False

mpc_args=()
menu_args=()

for arg in "$@"
do
    if [[ "$arg" == --*=* ]]; then
        mpc_args+=("${arg%%=*}")
        mpc_args+=("${arg#*=}")
	elif [[ "$arg" == --* ]]; then
		mpc_args+=("$arg")
	else
        menu_args+=("$arg")
    fi
done

filters="("
declare -A argarray

d_playlist() {
    # Simply show the playlist
    local format="%position% - %title% - %album% - %artist%"
    local title

    title=$(mpc playlist -f "$format" "${mpc_args[@]}" | dmenu -p Track "${dmenu_args[@]}")
    printf '%s' "${title%% *}"
}

d_playlist_al() {
    local title
    local playlist=$(mpa playlist "${mpc_args[@]}")

    title=$(echo "$playlist" | dmenu -p Albums "${dmenu_args[@]}")
    printf '%s' "$title"
}

d_show_controls() {
    i=0
    if [[ "$argarray" == "" ]]; then
        argarray[0]="$toggle_name"
        argarray[1]="$next_name"
        argarray[2]="$prev_name"
        argarray[3]="$stop_name"
    fi
    max=$(( ${#argarray[@]} ))
    {
        while [[ $i -lt max ]]
        do
            opt="${argarray[$i]}"
            printf '%s\n' "$opt"
            let "i++"
        done
    } | dmenu -p Controls "${dmenu_args[@]}"
}

d_show_tag() {
    local tag="$1"
    local filter="${filters})"
    local search
    local title="${tag^}"
    argCount="$2"

    # If no filters have been set yet, we set the filter to an empty string, which causes mpc to glitch and just show ALL entries
    if [[ "$filter" == "()" ]]; then
        mapfile -t search < <(mpc "${mpc_args[@]}" list $tag)
    else
	mapfile -t search < <(mpc "${mpc_args[@]}" list $tag "$filter")
    fi

    if [[ "$title" == "Albumartist" ]]; then
        title="AlbumArtist" #Just a special case
    fi

    if (( ${#search[@]} > 1 )) ; then

        {
            printf '%s\n' "$all_name"
            printf '%s\n' "$back_name"
            printf '%s\n' "${search[@]}" | sort -f
        } | dmenu -p $title "${dmenu_args[@]}"
    else
    	let "argCount--"
        printf '%s\n' "${search[0]}"
    fi
    return $argCount
}


d_add_restriction() {
    local tag="$1"
    local arg="$2"

    if [[ "$arg" != "$all_name" ]]; then
        if [[ "$filters" != "(" ]]; then
            filters="$filters AND "
        fi

        filters="$filters ($tag == \"$arg\")"
    fi
}

d_remove_restriction() {
    local args="$filters"
    local argsLength="${#args}"
    local foundArgs=0
    local argCount="$1"
    local filter=""
    local i=0
    while [[ $i -lt $argsLength && $foundArgs -lt $argCount ]]
    do
        local word="${args[$i]}"
        local wordLength="${#word}"
        local j=0
        while [[ $j -lt $wordLength && $foundArgs -lt $argCount ]]
        do
            local char="${word:j:1}"
            if [[ "$char" = ")" ]]; then
                let "foundArgs++"
            fi
            filter="$filter$char"
            let "j++"
        done
        if [[ $foundArgs -lt $argCount ]]; then
            filter="$filter "
        fi
        let "i++"
    done
    if [[ "$filter" = "" ]]; then
        filter="("
    fi
    filters="$filter"
}

i=0

for arg in "$menu_args"; do
    if [[ $arg == :: ]]; then
        dmenu_args=( "${@:$i}" )
        break
    fi

    case "$arg" in
        # Mode args
        -l) mode=library && let "i--" ;;
        -p) mode=playlist && let "i--" ;;
        -P) mode=playlist_al && let "i--" ;;
        -c) clear=True && let "i--" ;;
        -C) mode=control && let "i--" ;;
        # Sorting args
    	-t) argarray["$i"]="title" ;;
    	-a) argarray["$i"]="artist" ;;
        -A) argarray["$i"]="albumartist" ;;
        -al) argarray["$i"]="album" ;;
        -g) argarray["$i"]="genre" ;;
        -prev) argarray["$i"]="$prev_name" ;;
        -next) argarray["$i"]="$next_name" ;;
        -toggle) argarray["$i"]="$toggle_name" ;;
        -pause) argarray["$i"]="$pause_name" ;;
        -play) argarray["$i"]="$play_name" ;;
        -stop) argarray["$i"]="$stop_name" ;;
        -clear) argarray["$i"]="$clear_name" ;;
        -nextA) argarray["$i"]="$nextal_name" ;;
        -prevA) argarray["$i"]="$preval_name" ;;
        -rand) argarray["$i"]="$rand_track" ;;
        -randA) argarray["$i"]="$rand_album" ;;
        -queue) argarray["$i"]="$queue_track" ;;
        -queueA) argarray["$i"]="$queue_album" ;;
        *) argarray["$i"]="${arg#?}" ;;
    esac

    let "i++"
done

argCount=0

case "$mode" in
    library)

    i=0
    if [[ "$argarray" == "" ]]; then
        argarray[0]="genre"
        argarray[1]="albumartist"
        argarray[2]="album"
    fi

    max=$(( ${#argarray[@]} ))
    argCount=0

    while [[ i -lt max ]]
    do
        tag="${argarray[$i]}"
        arg=$(d_show_tag "$tag" "$argCount")
        argCount=$?
        [[ $arg ]] || exit 1
        if [[ "$arg" != "$back_name" ]]; then
            if [[ "$arg" != "$all_name" ]]; then
                d_add_restriction "$tag" "$arg"
            fi
            let "argCount++"
            let "i++"
        else
            let "i--"
            if [[ i -lt 0 ]]; then
                exit 1
            fi
            let "argCount--"
            while [[ i -gt argCount ]]
            do
            	let "i--"
            done
            d_remove_restriction "$argCount"
        fi
    done

    if [[ $clear == True ]]; then
        mpc "${mpc_args[@]}" clear
    fi

    filters="${filters})"

    if [[ "$filters" != "()" ]]; then
        mpc "${mpc_args[@]}" findadd "$filters"
    else
        mpc "${mpc_args[@]}" add /
    fi


        mpc "${mpc_args[@]}" play >/dev/null 2>&1

    ;;


    playlist)
        track="$(d_playlist)"
        if [[ "$track" != "" ]]; then
            mpc "${mpc_args[@]}" play "$track"
        fi
    ;;

    playlist_al)
        album="$(d_playlist_al)"
        if [[ "$album" != "" ]]; then
            playlist=$(mpa playlist "${mpc_args[@]}")
            readarray -t splitted <<<"$playlist"
            count=0
            prev=""
            while [[ "$prev" != "$album" ]]
            do
                prev="${splitted[count]}"
                let "count++"
            done
            if [[ $clear = True ]]; then
                arg2="-c"
            fi
            mpa "${mpc_args[@]}" play "$count" "$arg2"
        fi
    ;;

    control)
    	fin=False
        if [[ $clear = True ]]; then
            arg2="-c"
        fi
    	while [[ $fin == False ]]
    	do
    		arg=$(d_show_controls)
    		case "$arg" in
                "$prev_name") mpc "${mpc_args[@]}" prev ;;
                "$next_name") mpc "${mpc_args[@]}" next ;;
                "$toggle_name") mpc "${mpc_args[@]}" toggle ;;
                "$pause_name") mpc "${mpc_args[@]}" pause ;;
                "$play_name") mpc "${mpc_args[@]}" play ;;
                "$stop_name") mpc "${mpc_args[@]}" stop ;;
                "$clear_name") mpc "${mpc_args[@]}" clear ;;
                "$nextal_name") mpa "${mpc_args[@]}" next $arg2 ;;
                "$preval_name") mpa "${mpc_args[@]}" prev $arg2 ;;
                "$rand_track") mpa "${mpc_args[@]}" random -t $arg2 ;;
                "$rand_album") mpa "${mpc_args[@]}" random $arg2 ;;
                "$queue_track") mpa "${mpc_args[@]}" radio -t $arg2 ;;
                "$queue_album") mpa "${mpc_args[@]}" radio $arg2 ;;
                "") fin=True ;;
                *) mpc "${mpc_args[@]}" $arg ;;
            esac
        done
    ;;
esac
